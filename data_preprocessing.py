# -*- coding: utf-8 -*-
"""Data_Preprocessing.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1pQXPlnz0_FImIvyPG34erugKL5fX7ote
"""

import pandas as pd
df = pd.read_csv("/content/economy-and-growth_lka.csv")
df.info()
df.head()

df = df.iloc[1:].copy()
df.columns = ["Country", "ISO3", "Year", "Indicator", "Indicator_Code", "Value"]

df["Year"] = pd.to_numeric(df["Year"], errors="coerce")
df["Value"] = pd.to_numeric(df["Value"], errors="coerce")

missing_values = df.isnull().sum()
total_missing = df.isnull().sum().sum()

print("Missing values per column:")
print(missing_values)
print(f"\nTotal missing values: {total_missing}")

duplicate_rows = df[df.duplicated()]
duplicate_count = df.duplicated().sum()

print(f"\nNumber of duplicate rows: {duplicate_count}")
print("\nDuplicate rows (if any):")
print(duplicate_rows.head())

numeric_columns = df.select_dtypes(include=["number"]).columns

# Print the result
print("Numeric columns in the dataset:")
print(numeric_columns)

df = df[df['Year'] >= 2000]
# If your dataset includes other countries (double check)
df = df[df['Country'] == 'Sri Lanka']
df

df.to_csv("cleaned_economy_data.csv", index=False)

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# Load the cleaned dataset
df = pd.read_csv("cleaned_economy_data.csv")

# Define the numerical feature for analysis
numerical_feature = 'Value'

# Detect outliers using IQR
Q1 = df[numerical_feature].quantile(0.25)
Q3 = df[numerical_feature].quantile(0.75)
IQR = Q3 - Q1
lower_bound = Q1 - 1.5 * IQR
upper_bound = Q3 + 1.5 * IQR

outliers_iqr = (df[numerical_feature] < lower_bound) | (df[numerical_feature] > upper_bound)

# Print the outliers' bounds
print("Lower Bound:", lower_bound)
print("Upper Bound:", upper_bound)

# ðŸ“Š Plot boxplot with outliers
plt.figure(figsize=(10, 4))
sns.boxplot(x=df[numerical_feature], color='skyblue')
plt.title(f'Boxplot of {numerical_feature} with Outliers')
plt.xlabel(numerical_feature)
plt.grid(True)
plt.show()

# Get outliers from the dataset
outliers = df[outliers_iqr]
print("Outliers detected:\n", outliers)

#EDA

import pandas as pd
import matplotlib.pyplot as plt

# Load dataset
df = pd.read_csv("cleaned_economy_data.csv")

# Count years of data available per indicator
indicator_counts = df.groupby('Indicator')['Year'].nunique().sort_values(ascending=False)

# Visualize top 10 indicators by data availability
plt.figure(figsize=(10, 6))
indicator_counts.head(10).plot(kind='barh', color='skyblue')
plt.xlabel("Number of Years Available")
plt.title("Top 10 Economic Indicators by Year Coverage")
plt.gca().invert_yaxis()
plt.tight_layout()
plt.show()

import seaborn as sns

# Define indicators of interest
selected_indicators = [
    'GDP growth (annual %)',
    'Inflation, consumer prices (annual %)',
    'Gross capital formation (% of GDP)'
]

# Filter dataset
df_selected = df[df['Indicator'].isin(selected_indicators)]

# Plot
plt.figure(figsize=(12, 6))
sns.lineplot(data=df_selected, x='Year', y='Value', hue='Indicator', marker='o')
plt.title("Economic Trends in Sri Lanka")
plt.ylabel("Value")
plt.grid(True)
plt.tight_layout()
plt.show()

# Pivot data for correlation
df_pivot = df[df['Indicator'].isin(selected_indicators)].pivot(index='Year', columns='Indicator', values='Value')

# Compute correlation
correlation_matrix = df_pivot.corr()

# Plot correlation heatmap
plt.figure(figsize=(6, 4))
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', fmt=".2f")
plt.title("Correlation Between Key Indicators")
plt.tight_layout()
plt.show()

